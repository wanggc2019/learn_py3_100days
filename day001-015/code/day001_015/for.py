#!/usr/bin/env python
# -*- coding:utf-8 -*-

"""
for
循环结构嵌套 : 99乘法表
1×1=1
1×2=2	2×2=4
1×3=3	2×3=6	3×3=9
1×4=4	2×4=8	3×4=12	4×4=16
1×5=5	2×5=10	3×5=15	4×5=20	5×5=25
1×6=6	2×6=12	3×6=18	4×6=24	5×6=30	6×6=36
1×7=7	2×7=14	3×7=21	4×7=28	5×7=35	6×7=42	7×7=49
1×8=8	2×8=16	3×8=24	4×8=32	5×8=40	6×8=48	7×8=56	8×8=64
1×9=9	2×9=18	3×9=27	4×9=36	5×9=45	6×9=54	7×9=63	8×9=72	9×9=81

"""
# from __future__ import print_function

# for i in range(1, 10):
#     for j in range(1, i + 1):
#         # 实现输出不换行的效果print('string',end) 是python3的语法，python2会报错，添加from __future__ import print_function
#         print('{0}*{1}={2}'.format(j, i, i * j), end='\t')  # 输出不换行
#     print()  # 换行


"""
找水仙花数：3位数，个位 十位 百位 的数字的立方之和 等于该数字
xyz = x^3 + y^3 + z^3
"""
# 限定3位数
for num in range(100,1001):
    m = num % 10  # 模运算，求个位数=余数
    u = num // 10 % 10  # 先整除 再取模，十位数=余数，就是把小数点向左移动一位，按照取个位数的方式再来一次
    n = num // 100  # 百位数
    if m ** 3 + u ** 3 + n ** 3 == num:
        print('%d是水仙花数' % num)

"""
正整数的反转
思路：就是用以上的取位数的方法，对10取模，取到最后位上的数字，然后左移
"""

num = int(input('num = '))
reversed_num = 0
# 只要num大于0 就一直进行下面的循环
while num > 0:
    # 比如1234
    # 第一次循环：个位数字4，0*0 + 4 = 4 ，小数点往左移动一位，123
    # 第二次循环：个位数字3，4*10 + 3=43 ，小数点再往左移动一位，12
    # 第三次循环：个位数字2，43 * 10 + 2 = 432，小数点左移，1
    # 第四次循环：各位数字1，432 * 10 + 1 = 4321，num =0结束循环
    reversed_num = reversed_num * 10 + num % 10
    num //= 10
print(reversed_num)

"""
百鸡百钱问题
鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？
公鸡x 母鸡y 小鸡z
5x + 3y + 1/3z = 100

暴力穷举法：x [0,20]  y [0,33]  z= 100-x-y
"""
for x in range(0, 20):
    for y in range(0, 33):
        z = 100 - x -y
        if 5 * x + 3 * y + 1 / 3 * z == 100:
            print('公鸡%d只，母鸡%d只，小鸡%d只' % (x, y, z))
